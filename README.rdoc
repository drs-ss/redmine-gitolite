= redmine-gitolite

CURRENT HEAD VERSION WORKS WITH TRUNK REDMINE (certified with 2.2.3)

THIS PLUGIN IS COMPATIBLE WITH REDMINE 2.X ONLY !

This is {Redmine Gitolite Hook}[https://github.com/kahseng/redmine_gitolite_hook] combined with {redmine-gitolite}[https://github.com/jhogendorn/redmine-gitolite]

A Redmine plugin which manages your gitolite configuration based on your projects and user memberships in Redmine.

Provides Gitolite hook, for automaticaly pulling changes to local clone of repository. You don't need to any access to your, this plugin will create local clone and keep it up to date.

Includes Public Key management views (extracted from http://plan.io).

== Requirements:

=== Gems:
* net-ssh
* lockfile
* {gitolite}[https://github.com/wingrunr21/gitolite/] (works with 1.1.0)

=== Other:
* Gitolite server (works with v2.3.1-0-g912a8bd-dt)
* accessible Git executable (works with 1.7.2.5)
* curl


== Setup:
1. Install Redmine and put this plugin in redmine/plugins directory and migrate database (plugins)

  $ cd redmine/plugins
  $ git clone git://github.com/pitit-atchoum/redmine-gitolite.git redmine_gitolite
  $ cd ..
  $ RAILS_ENV=production rake db:migrate_plugins

2. Create SSH Keys and SSH config file for user running Redmine
  $ sudo su - redmine
  $ ssh-keygen -N '' -f ~/.ssh/redmine
  $ vim ~/.ssh/config

  Host localhost
    HostName localhost
    User git
    IdentityFile ~/.ssh/redmine
    IdentitiesOnly yes

3. User running Redmine must have RW+ access to gitolite-admin (assuming that you have gitolite installed).

4. Make sure that Redmine user has Gitolite server in his known_hosts list (This is also a good check to see if Gitolite works)

  $ sudo su - redmine
  $ ssh git@localhost
  * [accept key]

You should get something like that :

  hello redmine_redmine, this is gitolite v2.3.1-0-g912a8bd-dt running on git 1.7.2.5
  the gitolite config gives you the following access:
       R   W  gitolite-admin
      @R_ @W_ testing


5. Configure email and name of git user for your redmine account

  $ sudo su - redmine
  $ git config --global user.email "redmine@gitolite.org"
  $ git config --global user.name "Redmine Gitolite"

6. Add post-receive hook to common gitolite hooks (examples in contrib dir) and configure it (host, api key, etc, see sources)
  $ sudo su - gitolite #login on gitolite user
  $ cat > .gitolite/hooks/common/post-receive
  * [paste hook]
  $ vim .gitolite/hooks/common/post-receive
  * [enable WS for repository management in administration->settings->repositories]
  * [copy generated API key] (DEFAULT_REDMINE_KEY)
  * [set Redmine server URL] (DEFAULT_REDMINE_SERVER)
  $ chmod +x .gitolite/hooks/common/post-receive
  $ vim .gitolite.rc
  * [add ".*" to the GL_GIT_CONFIG_KEYS setting
  * [ set $REPO_UMASK = 0022; ]
  $ gl-setup

7. Configure plugin in Redmine settings
  * [Adminitration -> Plugins -> Redmine Gitolite]
  * [Gitolite URL should be set to your gitolite-admin git repository]
  * [Base path should point to the Gitolite directory which will hold local copies (must exist, example : /home/gitolite/repositories)
  * [Set developer and ro urls as in given examples (just slightly modify them)]
    [%{name} will be replaced with your repository identifier]

== Pro Tips:

* You should manage your keys only from Redmine to avoid conflicts.
* Need new bare git repo? Create it via Redmine, disable other features.
* This is most convenient way to manage keys by your user.

== Found bug?

Open new issue and complain. You can also fix it and sent pull request.
This plugin is in active usage in current, edge Redmine. Any suggestions are welcome.
